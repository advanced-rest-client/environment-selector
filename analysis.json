{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "An element to select current variables environment.\n\nRenders a material design dropdown with list of available environments.\nIt always render environment **Default** (value `default`).\n\n### Example\n\n```html\n<environment-selector></environment-selector>\n```\n\n```javascript\ndocument.queryElement('environment-selector')\n.addEventListener('selected-environment-changed', (e) => {\n   console.log(e.detail.value); // Selected environment\n});\n```\n\n### Styling\n\nUse variables for `paper-dropdown-menu`, `paper-listbox` and `paper-item`\nto style the control.",
      "summary": "",
      "path": "environment-selector.js",
      "properties": [
        {
          "name": "noLabelFloat",
          "type": "boolean | null | undefined",
          "description": "Set to make selector's label dissapear after selection has been made.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "selected",
          "type": "string | null | undefined",
          "description": "Selected environment.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_environmentChanged\"",
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_envChangedHandler",
          "description": "Handler for the `selected-environment-changed` event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 2
            },
            "end": {
              "line": 111,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_environmentChanged",
          "description": "Handler for the `selected` property change",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected",
              "type": "String"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatchChange",
          "description": "Dispatches `selected-environment-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 2
            },
            "end": {
              "line": 145,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "New value"
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 49,
          "column": 0
        },
        "end": {
          "line": 152,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.EnvironmentSelector",
      "attributes": [
        {
          "name": "no-label-float",
          "description": "Set to make selector's label dissapear after selection has been made.",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 27
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "selected",
          "description": "Selected environment.",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 6
            },
            "end": {
              "line": 81,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-environment-changed",
          "description": "Fired when selected environment changed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "environment-selector",
      "mixins": [
        "VariablesConsumerMixin"
      ]
    }
  ]
}
